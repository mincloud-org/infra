apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-slave
  labels:
    app: redis
    app.kubernetes.io/name: redis-slave
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: redis
spec:
  serviceName: redis-slave
  replicas: 2
  selector:
    matchLabels:
      app: redis
      app.kubernetes.io/name: redis-slave
      role: slave
  template:
    metadata:
      labels:
        app: redis
        app.kubernetes.io/name: redis-slave
        app.kubernetes.io/component: database
        role: slave
    spec:
      terminationGracePeriodSeconds: 60
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: redis
            role: slave
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: redis
                  role: slave
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: init-redis
        image: redis:8-alpine
        command:
        - sh
        - -c
        - |
          # Prepare redis.conf from template
          NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
          cp /tmp/redis-slave.conf /etc/redis/redis.conf
          # Append replicaof with an explicit leading newline to avoid concatenation
          # Use headless Service pod DNS to point directly to master pod 0
          printf "\nreplicaof redis-master-0.redis-master-headless.${NAMESPACE}.svc 6379\n" >> /etc/redis/redis.conf
        volumeMounts:
        - name: redis-config
          mountPath: /tmp/
        - name: redis-config-writable
          mountPath: /etc/redis/
      containers:
      - name: redis
        image: redis:8-alpine
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 999
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        command:
        - redis-server
        - /etc/redis/redis.conf
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config-writable
          mountPath: /etc/redis/
        startupProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - |
                echo "PreStop: Shutting down Redis replica...";
                redis-cli -p 6379 client pause 5000 || true;
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis-slave.conf
            path: redis-slave.conf
      - name: redis-config-writable
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      labels:
        app: redis
        role: slave
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi